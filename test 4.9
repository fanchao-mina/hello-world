//int main()
//{
//	int a = 0;//4个字节，32个bit位
//	int b = ~a;//b是有符号的整型,
//	//~--按（2进制）位取反
//	//00000000000000000000000000000000
//	//11111111111111111111111111111111
//	//原码、反码、补码
//	//负数在内存中存储的时候，存储的是二进制的补码
//	//11111111111111111111111111111111 前面有1是负数，补码
// 	//11111111111111111111111111111110 转化成反码
//	//10000000000000000000000000000001 转化成原码，前面1不动（表示符号），其他位取反
//	printf("%d\n", b); //使用的，打印的是这个数的原码
//	return 0;
//}

//int main()
//{
//	int a = 10;
//	//int b = a++;//后置++,先使用，后++
//	int c = a--;//后置--,先使用，后--
//	//printf("a= %d  b=%d\n", a, b);// 11 10
//	printf("a= %d  c=%d\n", a, c);//  9 10
//	return 0;
//
//   }


//}int main()
//{
//	int a = 10;
//	//int b = ++a;//前置++，先++，再使用
//	int c = --a; //前置-- ,先--,后使用
//	//printf("a= %d  b=%d\n", a, b);// 11 11
//	printf("a= %d  c=%d\n", a, c);//  9 9
//
//	return 0;
//
//}
//
//int main()
//{
//	int a = (int)3.14;//double -- int
//	return 0;
//}

int Add(int x, int y)
{ 
	int z = 0;
    z = x + y;
    return z;
}
int main()
{
	//int arr[10] = { 0 };
	//arr[4];//[] -下标引用操作符
	int a = 10;
	int b = 20;
	int sum = Add(a, b);//()--函数调用操作符
	printf("sum= %d\n", sum);

	return 0;

}
//int main()
//{ 
//	int a = 10; //申请了4个字节的空间
//	/*printf("%p\n", &a);*/
//	int* p = &a;//p是一个变量-指针变量
//	//printf("%p\n", p);
//	*p = 20;
//	//*-解引用操作符/间接访问操作符
//	printf("a = %d\n", a);
//
//	return 0;
//}
//
//int main()
//{
//	double d = 3.12;
//	double* pd = &d;
//	*pd = 4.12;
//	printf("%lf\n", d); 
//	printf("%lf\n", *pd);
//
//	return 0;
//}
//int main()
//{
//	double d = 1.23;
//	double* pd = &d;// 32-4  64-8
//	printf("%d\n", sizeof(pd));
//	return 0;
//
//}
//int main()
//{
//	printf("%d\n", sizeof(char*));//32-4 64-8  算的指针的大小！！
//	printf("%d\n", sizeof(short*));//32-4 64-8
//	printf("%d\n", sizeof(long*));//32-4 64-8
//	printf("%d\n", sizeof(double*));//32-4 64-8
//	return 0;
//}


//结构体
//char int double ..
// 人 = 3.14
// 'w'
//书-复杂对象
//
//名字+身高+年龄+身份证号码+....
//书名+作者+出版社+定价+书号....
//复杂对象-- 结构体 - 我们自己创造出来的一种类型
//
//创建一个结构体类型
//struct Book
//{
//	char name[20];//C语言程序设计
//	short price;//55
//
//};
//int main()
//{   //利用结构体类型-创建一个该类型的结构体变量
//	struct Book b1 = { "C语言程序设计", 55 };
//	struct Book* pb = &b1;
//	////利用pb打印出我的书名和价格
//	//.  结构体变量.成员
//	//-> 结构体指针->成员
//	printf("%s\n", pb->name);
//	printf("%d\n", pb->price);
//	//printf("%p\n", sizeof(b1));
//	//printf(" %s\n",  (*pb).name);
//	//printf(" %d\n",  (*pb).price);
//	/*printf("价格: %d元\n", b1.price);
//	b1.price = 15;
//	printf("修改后的价格: %d\n", b1.price);
//*/
//	return 0;
//}


















//#include <stdio.h>
//#include <string.h>
//struct Book
//{
//	char name[20];//C语言程序设计
//	short price;//55
//
//};
//int main()
//{   //利用结构体类型-创建一个该类型的结构体变量
//	struct Book b1 = { "C语言程序设计", 55 };
//	strcpy (b1.name, "C++");//strcpy-string copy -字符串拷贝-库函数-string.h
//	printf("%s\n", b1.name);
//	//	struct Book* pb = &b1;
//
////	////利用pb打印出我的书名和价格
////	//.  结构体变量.成员
////	//-> 结构体指针->成员
////	printf("%s\n", pb->name);
////	printf("%d\n", pb->price);
////	//printf("%p\n", sizeof(b1));
////	//printf(" %s\n",  (*pb).name);
////	//printf(" %d\n",  (*pb).price);
////	/*printf("价格: %d元\n", b1.price);
////	b1.price = 15;
////	printf("修改后的价格: %d\n", b1.price);
////*/
//	return 0;
//}




